<?php
/**
 * ItemOfferDTOTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  eSagu\Ebay\RePricing\V1
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * eSagu ebay RePricing API
 *
 * eSagu API to reprice items on ebay.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace eSagu\Ebay\RePricing\V1;

/**
 * ItemOfferDTOTest Class Doc Comment
 *
 * @category    Class */
// * @description A offer on ebay. An offer contains information about an offer on a item. The gap is computed by the item&#39;s price gap. The offer flags contains information like the compared to flag indicating which offer was used as repricing target.
/**
 * @package     eSagu\Ebay\RePricing\V1
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ItemOfferDTOTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test "ItemOfferDTO"
     */
    public function testItemOfferDTO()
    {

    }

    /**
     * Test attribute "category_id"
     */
    public function testPropertyCategoryId()
    {

    }

    /**
     * Test attribute "condition"
     */
    public function testPropertyCondition()
    {

    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {

    }

    /**
     * Test attribute "current_price"
     */
    public function testPropertyCurrentPrice()
    {

    }

    /**
     * Test attribute "feedback_score"
     */
    public function testPropertyFeedbackScore()
    {

    }

    /**
     * Test attribute "flags"
     */
    public function testPropertyFlags()
    {

    }

    /**
     * Test attribute "global_id"
     */
    public function testPropertyGlobalId()
    {

    }

    /**
     * Test attribute "is_multi_variation_listing"
     */
    public function testPropertyIsMultiVariationListing()
    {

    }

    /**
     * Test attribute "item_id"
     */
    public function testPropertyItemId()
    {

    }

    /**
     * Test attribute "listing_type"
     */
    public function testPropertyListingType()
    {

    }

    /**
     * Test attribute "positive_feedback_percent"
     */
    public function testPropertyPositiveFeedbackPercent()
    {

    }

    /**
     * Test attribute "price_gap"
     */
    public function testPropertyPriceGap()
    {

    }

    /**
     * Test attribute "product_id"
     */
    public function testPropertyProductId()
    {

    }

    /**
     * Test attribute "product_id_type"
     */
    public function testPropertyProductIdType()
    {

    }

    /**
     * Test attribute "seller_name"
     */
    public function testPropertySellerName()
    {

    }

    /**
     * Test attribute "shipping_costs"
     */
    public function testPropertyShippingCosts()
    {

    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {

    }

    /**
     * Test attribute "inserted"
     */
    public function testPropertyInserted()
    {

    }

    /**
     * Test attribute "updated"
     */
    public function testPropertyUpdated()
    {

    }

}
